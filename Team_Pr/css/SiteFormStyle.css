.form_style {
  display: flex;
  flex-direction: column;
  background-color: #fff;
  border-radius: 8px;
}
.form_UpperBlockStructure {
  display: flex;
  flex-direction: column;
  align-items: center;
}
.form__inputStyle {
  width: 308px;
  height: 44px;
  border: 1px solid #cdbc99;
  border-radius: 2px;
  box-sizing: border-box;
  text-indent: 10px;
  font-size: 2em;
  font-family: "OpenSans-Regular", Tahoma, sans-serif;
}
.form_contactsBlock {
  margin-top: 25px;
}
.form_inputNamesStyle {
  font-family: "OpenSans-Regular", Tahoma, sans-serif;
  font-size: 2em;
  color: #8e8071;
  margin-bottom: 10px;
}
.form__block {
  display: flex;
  flex-direction: column;
  margin-bottom: 20px;
}
.form__textarea {
  width: 308px;
  height: 107px;
  resize: none;
  border: 1px solid #cdbc99;
  border-radius: 2px;
  box-sizing: border-box;
  text-indent: 10px;
  font-size: 2em;
  font-family: "OpenSans-Regular", Tahoma, sans-serif;
}
.form__blockButtons {
  display: flex;
  align-self: flex-end;
  height: 92px;
  width: 370px;
  background: #f8f3f0;
  align-items: center;
  padding-left: 31px;
  padding-right: 31px;
  box-sizing: border-box;
  position: relative;
}
.form__submitButton {
  height: 46px;
  width: 142px;
  border-radius: 3px;
  border: 1px solid #e96b45;
  background: #e96b45;
  font-family: "OpenSans-Regular", Tahoma, sans-serif;
  font-size: 2em;
  color: #fff;
  position: absolute;
  top: 30px;
  left: 200px;
}
.checkbox__position {
  position: absolute;
  display: block;
  top: 40px;
}
.success {
  display: none;
  position: absolute;
  z-index: 1;
  top: 30px;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
